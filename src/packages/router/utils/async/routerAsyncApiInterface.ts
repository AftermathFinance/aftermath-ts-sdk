import { SuiAddress } from "@mysten/sui.js";
import { CoinType } from "../../../coin/coinTypes";
import { RouterAsyncSerializablePool } from "../../routerTypes";
import { Balance, SerializedTransaction } from "../../../../types";

/////////////////////////////////////////////////////////////////////
//// Interface
/////////////////////////////////////////////////////////////////////

export interface RouterAsyncApiInterface<
	PoolType extends RouterAsyncSerializablePool
> {
	/////////////////////////////////////////////////////////////////////
	//// Required
	/////////////////////////////////////////////////////////////////////

	/////////////////////////////////////////////////////////////////////
	//// Functions
	/////////////////////////////////////////////////////////////////////

	/////////////////////////////////////////////////////////////////////
	//// Objects
	/////////////////////////////////////////////////////////////////////

	fetchPoolForCoinTypes: (inputs: {
		coinType1: CoinType;
		coinType2: CoinType;
	}) => Promise<PoolType>;

	/////////////////////////////////////////////////////////////////////
	//// Inspections
	/////////////////////////////////////////////////////////////////////

	fetchTradeAmountOut: (inputs: {
		walletAddress: SuiAddress;
		pool: PoolType;
		coinInType: CoinType;
		coinOutType: CoinType;
		coinInAmount: Balance;
	}) => Promise<Balance>;

	// fetchTradeAmountIn: (inputs: {
	// 	walletAddress: SuiAddress;
	// 	pool: PoolType;
	// 	coinInType: CoinType;
	// 	coinOutType: CoinType;
	// 	coinInAmount: Balance;
	// }) => Promise<Balance>;

	/////////////////////////////////////////////////////////////////////
	//// Transactions
	/////////////////////////////////////////////////////////////////////

	fetchTradeTx: (inputs: {
		walletAddress: SuiAddress;
		pool: PoolType;
		coinInType: CoinType;
		coinOutType: CoinType;
		coinInAmount: Balance;
	}) => Promise<SerializedTransaction>;
}
